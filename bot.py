from os.path import exists
from datetime import datetime
import sqlite3
from threading import Thread

import checker
import telebot

print(__name__ == '__main__')


def write_to_users(id_user, username, name):
    '''–§—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É –≤ —Ç–∞–±–ª–∏—Ü—é users'''

    try:
        conn = sqlite3.connect('db/database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute('INSERT INTO users (id_user, username) VALUES (?, ?)',
                       (id_user, username))
        cursor.close()
        conn.commit()
        bot.send_message(id_user, "–ü—Ä–∏–≤—ñ—Ç, " + name + "! –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –≤ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –¥–æ—à–æ–∫ –æ–≥–æ–ª–æ—à–µ–Ω—å.\n"
                                                      "–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑ –ø–æ—Ç—Ä—ñ–±–Ω–∏–º–∏ —Ç–æ–±—ñ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏\n\n"
                                                      "–ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ –¥–æ—à–∫–∏:\nOLX", reply_markup=greet_kb)
    except Exception:
        bot.send_message(id_user, "–ü—Ä–∏–≤—ñ—Ç, " + name + ", —Ä–∞–¥–∏–π —Ç–µ–±–µ –±–∞—á–∏—Ç–∏!", reply_markup=greet_kb)


def write_to_requests(id_user, url, board_name):
    '''–§—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É –≤ —Ç–∞–±–ª–∏—Ü—é requests'''

    conn = sqlite3.connect('db/database.db', check_same_thread=False)
    cursor = conn.cursor()
    try:
        time_now = datetime.now()
        cursor.execute('INSERT INTO requests (id_user, url, board_name, last_advert) VALUES (?, ?, ?, ?)',
                       (id_user, url + '?search[order]=created_at%3Adesc',
                        board_name, time_now.strftime("%Y,%m,%d,%H,%M")))
        cursor.close()
        conn.commit()
        bot.send_message(id_user, "–¢–≤—ñ–π –∑–∞–ø–∏—Ç –¥–æ–¥–∞–Ω–æ –¥–æ –±–∞–∑–∏, —Ç–µ–ø–µ—Ä —Ç–∏ –±—É–¥–µ—à –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –ø–µ—Ä—à–∏–º!\n\n"
                                  "–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–∞ –∫–µ—Ä—É–≤–∞—Ç–∏ —Å–≤–æ—ó–º–∏ –∑–∞–ø–∏—Ç–∞–º–∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É \"–ú–æ—ó –∑–∞–ø–∏—Ç–∏\"",
                         reply_markup=greet_kb)
    except Exception:
        bot.send_message(id_user, "–¢–∞–∫–∏–π –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç –≤–∂–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ, –ø–µ—Ä–µ–≥–ª—è–Ω—å –≤–∫–ª–∞–¥–∫—É \"–ú–æ—ó –∑–∞–ø–∏—Ç–∏\"",
                         reply_markup=greet_kb)


def send_new():
    '''–§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ñ adverts —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å'''

    while True:
        conn = sqlite3.connect('db/database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM adverts WHERE is_sended is False")
        new_adv = cursor.fetchall()
        cursor.close()
        for adv in new_adv:
            cursor = conn.cursor()
            try:
                cursor.execute("SELECT id_user FROM requests WHERE id =?", (adv[0],))
                user_id = cursor.fetchone()
                str_to_send = '\n'.join(adv[3:-2])
                if exists('img/' + str(adv[1]) + '.png'):
                    bot.send_photo(user_id, open('img/' + str(adv[1]) + '.png', 'rb'), caption=str_to_send[:1020],
                                   reply_markup=greet_kb)
                else:
                    bot.send_message(user_id, str_to_send[:1020], reply_markup=greet_kb)
            except:
                pass
            cursor.execute("UPDATE adverts SET is_sended = True WHERE id_advert=?", (adv[1],))
            cursor.close()
            conn.commit()


if __name__ == "__main__":
    button = telebot.types.KeyboardButton('–ú–æ—ó –∑–∞–ø–∏—Ç–∏üîç')

    greet_kb = telebot.types.ReplyKeyboardMarkup(True).add(button)

    API = "1743404670:AAFUGxgr_Vbc47c7pxOhbUBhphQ4NLfDU3Y"

    bot = telebot.TeleBot(API)
    boards = ['olx', 'izi']

    checker_thread = Thread(target=checker.check)
    checker_thread.start()


    @bot.message_handler(commands=['start'])
    def starter(message):
        '''–§—É–Ω–∫—Ü—ñ—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó, –≤–∏–∫–ª–∏–∫—É–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–æ—é start'''

        write_to_users(message.from_user.id, message.from_user.username, message.from_user.first_name)


    @bot.message_handler(func=lambda message: message.text=='–ú–æ—ó –∑–∞–ø–∏—Ç–∏üîç')
    def show_reqs(message):
        '''–§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑—ñ —Å–ø–∏—Å–∫–æ–º –π–æ–≥–æ –∑–∞–ø–∏—Ç—ñ–≤'''

        conn = sqlite3.connect('db/database.db', check_same_thread=False)
        cursor = conn.cursor()
        id_user = message.from_user.id
        cursor.execute('SELECT * FROM requests WHERE id_user=?', (id_user,))
        reqs = cursor.fetchall()
        cursor.close()
        temp = ['–í–∞—à—ñ –∑–∞–ø–∏—Ç–∏:']
        markup = telebot.types.InlineKeyboardMarkup()
        for req in reqs:
            temp.append(str(req[0]) + '\n' + req[2])
            markup.add(telebot.types.InlineKeyboardButton(text='–í–∏–¥–∞–ª–∏—Ç–∏' + str(req[0]), callback_data=req[0]))
        str_to_send = '\n\n'.join(temp)
        bot.send_message(id_user, str_to_send, reply_markup=markup)


    @bot.message_handler(content_types=["text"])
    def text_handler(message):
        '''–§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è'''

        text = message.text
        if text.startswith('https'):
            for name in boards:
                if name in text:
                    write_to_requests(message.from_user.id, text, name)


    @bot.callback_query_handler(func=lambda call: True)
    def query_handler(call):
        '''–§—É–Ω–∫—Ü—ñ—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—à—É–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É'''

        conn = sqlite3.connect('db/database.db', check_same_thread=False)
        cursor = conn.cursor()
        cursor.execute("DELETE FROM adverts WHERE id_request=?", (call.data,))
        cursor.execute("DELETE FROM requests WHERE id=?", (call.data,))
        cursor.close()
        conn.commit()

        bot.answer_callback_query(callback_query_id=call.id, text='–í–∞—à –∑–∞–ø–∏—Ç –≤–∏–¥–∞–ª–µ–Ω–æ!')


    sender_thread = Thread(target=send_new)
    sender_thread.start()

    bot.polling(none_stop=True, timeout=60)